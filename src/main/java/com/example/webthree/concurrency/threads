线程安全
原子性：提供了互斥访问，即同一时刻只能有一个线程对其进行操作，Java中【atomic包】和【锁】能保证原子性
锁分为两种：synchronized-依赖JVM
            Lock-jdk提供的代码层面的锁，依赖特殊的CPU指令
synchronized：同步锁
              修饰对象：
                   修饰代码块：大括号括起来的代码，作用于【调用的对象】，被修饰代码称为同步语句块
                   修饰方法：修饰整个方法，作用于【调用对象】，被修饰的方法称为同步方。不能被继承，因为synchronized不属于方法声明的
                             一部分，子类想用需要显示声明
                   修饰静态方法：整个静态方法，作用于【这个类的所有对象】
                   修饰类：synchronized后面括号括起来的所有部分，作用于【这个类的所有对象】
synchronized:不可中断锁，适合竞争不激烈，竞争激烈时性能下降特别快，可读性好
Lock:可中断锁，可用unLock解锁，竞争激烈时能维持常态，多样化同步
Atomic：竞争激烈时能维持常态，比Lock性能好，但是只能同步一个值